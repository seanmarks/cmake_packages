@PACKAGE_INIT@

# Defines 'find_dependency()'
include(CMakeFindDependencyMacro)

# Import extra modules
list(APPEND CMAKE_MODULE_PATH "${CMAKE_CURRENT_LIST_DIR}/Modules")

# xdrfile dependency
# - TODO: Ensure the correct library is used if static linkage was performed?
set(xdrfile_ENABLED "@xdrfile_ENABLED@")
if(xdrfile_ENABLED)
	# Get a hint as to which xdrfile installation was used
	#set_and_check(xdrfile_INCLUDE_DIRS "@PACKAGE_xdrfile_INCLUDE_DIRS@")
	#get_filename_component(xdrfile_DIR ${xdrfile_INCLUDE_DIRS} PATH)

	# Calls helper module Findxdrfile.cmake
	find_dependency(xdrfile)
endif()

# DEBUG
#message(STATUS "xdrfile_ENABLED      = ${xdrfile_ENABLED}")
#message(STATUS "xdrfile_DIR          = ${xdrfile_DIR}")
#message(STATUS "xdrfile_INCLUDE_DIRS = ${xdrfile_INCLUDE_DIRS}")

if(NOT TARGET Foo::Foo)
	# Include export set
	include("${CMAKE_CURRENT_LIST_DIR}/FooTargets.cmake")
endif()

check_required_components(Foo)
